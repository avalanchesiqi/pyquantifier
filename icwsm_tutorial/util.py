import re
from collections import defaultdict, Counter
from datetime import datetime, timedelta
import numpy as np


def get_majority_vote(lst):
    return Counter(lst).most_common(1)[0][0]


def obj2str(datetime_obj, str_format='%Y-%m-%d %H:%M:%S'):
    return datetime_obj.strftime(str_format)


def str2obj(datetime_str, str_format='%Y-%m-%d %H:%M:%S'):
    return datetime.strptime(datetime_str, str_format)


def get_bin_idx(score, size=10):
    return min(int(score * size), size-1)


def get_x_axis(num_bin=10):
    return np.arange(0.5/num_bin, 1, 1/num_bin)


def text_preprocess(text_string, is_reddit):
    """Process a text string.
    1) Skip removed, deleted, bot comments on Reddit
    2) Remove all quoted texts on Reddit
    3) Remove urls
    4) Remove @ mentions
    5) Replace multiple whitespaces with one whitespace
    6) Skip comments with only whitespaces and punctuations
    """
    if is_reddit:
        # ignore deleted and removed and bot comment on Reddit:
        if text_string == '[removed]' or text_string == '[deleted]' \
            or 'I am a bot' in text_string or "I'm a bot" in text_string \
                or 'generated by a bot' in text_string:
            return ''
        # remove quoted text on Reddit:
        reddit_quote_regex = r'>.*(\n)\1'
        text_string = re.sub(reddit_quote_regex, ' ', text_string)

    # find all http or https urls and replace them with a whitespace
    url_regex = r'https?://\S+'
    text_string = re.sub(url_regex, ' ', text_string)

    # find all @ mentions and replace them with a whitespace
    mention_regex = r'@[\w\-]+'
    text_string = re.sub(mention_regex, ' ', text_string)

    # replace multiple whitespaces with one whitespace and strip head and tail
    space_pattern = r'\s+'
    text_string = re.sub(space_pattern, ' ', text_string).strip()

    # check if text_string only contains whitespaces and punctuations
    # if so, return an empty string
    if re.match(r'^[^\w]+$', text_string):
        return ''
    return text_string